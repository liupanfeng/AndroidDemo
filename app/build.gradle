apply plugin: 'com.android.application'

//代码覆盖率插件
apply plugin: 'jacoco'

android {
    lintOptions{
        abortOnError false
    }
    signingConfigs {
        config {
            keyAlias 'netease_lpf.keystore'
            keyPassword '52952700'
            storeFile file('./netease_lpf.jks')
            storePassword '52952700'
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    defaultConfig {
        applicationId "com.liupf.androidstudy"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.config
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            testCoverageEnabled true
        }
        debug {
            signingConfig signingConfigs.config
            testCoverageEnabled true
        }
    }

    jacoco{
        version "0.7.4.201502262128"
    }

    productFlavors {
    }
}


//jacocoTestReport依赖于connectedAndroidTest task，所以在执行jacoco之前需要先执行connectedAndroidTest，也就是说需要连接测试机（模拟器or真机）
task jacocoTestReport(type:JacocoReport,dependsOn:"connectedAndroidTest"){
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports{
        xml.enabled = false
        html.enabled = true
        csv.enabled = false
    }
    classDirectories = fileTree(
            dir : "$buildDir/intermediates/classes/debug",
            excludes : [
                    '**/*Test.class',
                    '**/R.class',
                    '**/R$*.class',
                    '**/BuildConfig.*',
                    '**/Manifest*.*'
            ]
    )
    def coverageSourceDirs = ['./src/main/java']
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    additionalClassDirs = files(coverageSourceDirs)
    executionData = files("$buildDir/outputs/code-coverage/connected/coverage.ec")
}





dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:appcompat-v7:23.2.1'
    compile 'com.android.support:palette-v7:23.2.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
